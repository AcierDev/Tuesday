"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/router/page",{

/***/ "(app-pages-browser)/./hooks/useWebsocket.tsx":
/*!********************************!*\
  !*** ./hooks/useWebsocket.tsx ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useWebSocketManager: function() { return /* binding */ useWebSocketManager; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sonner */ \"(app-pages-browser)/./node_modules/sonner/dist/index.mjs\");\nvar _s = $RefreshSig$();\n\n\nconst WEBSOCKET_URL = \"ws://192.168.1.216:3000/ws\";\nconst RECONNECT_DELAY = 2000;\nconst MAX_RECONNECT_ATTEMPTS = 5;\nconst PING_INTERVAL = 30000;\nconst INITIAL_STATE = {\n    sensor1: false,\n    sensor2: false,\n    solenoid: false,\n    ejection: false,\n    lastPhotoPath: null,\n    deviceConnected: false,\n    lastUpdate: new Date(),\n    currentImageUrl: null,\n    currentImageMetadata: null,\n    isCapturingImage: false,\n    currentAnalysis: null,\n    ejectionSettings: {\n        globalSettings: {\n            ejectionDuration: 1000,\n            requireMultipleDefects: false,\n            minTotalArea: 100,\n            maxDefectsBeforeEject: 5\n        },\n        perClassSettings: {\n            corner: {\n                enabled: true,\n                minConfidence: 0.5,\n                minArea: 100,\n                maxCount: 3\n            },\n            crack: {\n                enabled: true,\n                minConfidence: 0.5,\n                minArea: 100,\n                maxCount: 3\n            },\n            damage: {\n                enabled: true,\n                minConfidence: 0.5,\n                minArea: 100,\n                maxCount: 3\n            },\n            edge: {\n                enabled: true,\n                minConfidence: 0.5,\n                minArea: 100,\n                maxCount: 3\n            },\n            knot: {\n                enabled: true,\n                minConfidence: 0.5,\n                minArea: 100,\n                maxCount: 3\n            },\n            router: {\n                enabled: true,\n                minConfidence: 0.5,\n                minArea: 100,\n                maxCount: 3\n            },\n            side: {\n                enabled: true,\n                minConfidence: 0.5,\n                minArea: 100,\n                maxCount: 3\n            },\n            tearout: {\n                enabled: true,\n                minConfidence: 0.5,\n                minArea: 100,\n                maxCount: 3\n            }\n        },\n        advancedSettings: {\n            considerOverlap: false,\n            regionOfInterest: {\n                x: 0,\n                y: 0,\n                width: 100,\n                height: 100\n            }\n        }\n    }\n};\nconst useWebSocketManager = ()=>{\n    _s();\n    const [state, setState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        ...INITIAL_STATE,\n        currentAnalysis: null\n    });\n    const [logs, setLogs] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [alerts, setAlerts] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [connectionStatus, setConnectionStatus] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"disconnected\");\n    const [reconnectAttempts, setReconnectAttempts] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [connectionError, setConnectionError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const wsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const reconnectTimeoutRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const pingIntervalRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const isConnectingRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const mountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n    const handleBinaryMessage = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((blob)=>{\n        try {\n            const url = URL.createObjectURL(blob);\n            // Clean up previous URL if it exists\n            setState((prev)=>{\n                if (prev.currentImageUrl) {\n                    URL.revokeObjectURL(prev.currentImageUrl);\n                }\n                return {\n                    ...prev,\n                    currentImageUrl: url,\n                    lastUpdate: new Date()\n                };\n            });\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Image captured successfully\");\n        } catch (error) {\n            console.error(\"Error handling image blob:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Failed to process image\");\n        }\n    }, []);\n    const connect = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(()=>{\n        if (!mountedRef.current || isConnectingRef.current) {\n            return;\n        }\n        try {\n            isConnectingRef.current = true;\n            setConnectionStatus(\"connecting\");\n            const ws = new WebSocket(WEBSOCKET_URL);\n            ws.binaryType = \"blob\"; // Important for binary image data\n            wsRef.current = ws;\n            const connectionTimeout = setTimeout(()=>{\n                if (ws.readyState !== WebSocket.OPEN) {\n                    ws.close();\n                }\n            }, 5000);\n            ws.onopen = ()=>{\n                if (!mountedRef.current) {\n                    ws.close(1000, \"Component unmounted\");\n                    return;\n                }\n                clearTimeout(connectionTimeout);\n                setConnectionStatus(\"connected\");\n                setReconnectAttempts(0);\n                setConnectionError(\"\");\n                isConnectingRef.current = false;\n                sonner__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Connected to system\");\n            };\n            ws.onmessage = (event)=>{\n                try {\n                    // Handle binary message (image data)\n                    if (event.data instanceof Blob) {\n                        handleBinaryMessage(event.data);\n                        return;\n                    }\n                    const eventData = JSON.parse(event.data);\n                    // console.log(\"raw data\", eventData);\n                    if (!eventData.type && typeof eventData === \"object\") {\n                        setState((prev)=>({\n                                ...prev,\n                                ...eventData,\n                                lastUpdate: new Date()\n                            }));\n                        return;\n                    }\n                    switch(eventData.type){\n                        case \"imageMetadata\":\n                            {\n                                setState((prev)=>({\n                                        ...prev,\n                                        currentImageMetadata: eventData.data,\n                                        lastUpdate: new Date(),\n                                        currentAnalysis: null\n                                    }));\n                                break;\n                            }\n                        case \"stateUpdate\":\n                            {\n                                setState((prev)=>({\n                                        ...prev,\n                                        ...eventData.data,\n                                        lastUpdate: new Date()\n                                    }));\n                                break;\n                            }\n                        case \"ejectionSettings\":\n                            {\n                                setState((prev)=>({\n                                        ...prev,\n                                        ejectionSettings: eventData.data,\n                                        lastUpdate: new Date()\n                                    }));\n                                break;\n                            }\n                        case \"systemLog\":\n                            {\n                                setLogs((prev)=>[\n                                        {\n                                            id: crypto.randomUUID(),\n                                            timestamp: new Date(),\n                                            level: eventData.level || \"info\",\n                                            message: eventData.data.message,\n                                            source: eventData.source || \"system\"\n                                        },\n                                        ...prev\n                                    ]);\n                                break;\n                            }\n                        case \"alert\":\n                            {\n                                const newAlert = {\n                                    id: crypto.randomUUID(),\n                                    timestamp: new Date(),\n                                    level: eventData.level || \"warning\",\n                                    message: eventData.data.message,\n                                    acknowledged: false\n                                };\n                                setAlerts((prev)=>[\n                                        newAlert,\n                                        ...prev\n                                    ]);\n                                // Show toast for new alerts\n                                if (eventData.level === \"error\") {\n                                    sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(eventData.data.message);\n                                } else {\n                                    sonner__WEBPACK_IMPORTED_MODULE_1__.toast.warning(eventData.data.message);\n                                }\n                                break;\n                            }\n                        case \"analysisResults\":\n                            {\n                                setState((prev)=>({\n                                        ...prev,\n                                        currentAnalysis: eventData.data,\n                                        lastUpdate: new Date()\n                                    }));\n                                break;\n                            }\n                        case \"ejectionSettingsError\":\n                            {\n                                sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Failed to update ejection settings: \".concat(eventData.message));\n                                // Rollback to last known good state from server\n                                if (eventData.currentSettings) {\n                                    setState((prev)=>({\n                                            ...prev,\n                                            ejectionSettings: eventData.currentSettings,\n                                            lastUpdate: new Date()\n                                        }));\n                                }\n                                break;\n                            }\n                    }\n                } catch (error) {\n                    console.error(\"Error processing WebSocket message:\", error);\n                }\n            };\n            ws.onclose = (event)=>{\n                clearTimeout(connectionTimeout);\n                if (!mountedRef.current) return;\n                setConnectionStatus(\"disconnected\");\n                isConnectingRef.current = false;\n                sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Disconnected from system\");\n                if (event.code !== 1000 && event.code !== 1005) {\n                    if (reconnectAttempts < MAX_RECONNECT_ATTEMPTS) {\n                        reconnectTimeoutRef.current = setTimeout(()=>{\n                            if (mountedRef.current) {\n                                setReconnectAttempts((prev)=>prev + 1);\n                                connect();\n                            }\n                        }, RECONNECT_DELAY);\n                    } else {\n                        setConnectionError(\"Maximum reconnection attempts reached. Please refresh the page.\");\n                    }\n                }\n            };\n            ws.onerror = ()=>{\n                if (!mountedRef.current) return;\n                setConnectionStatus(\"disconnected\");\n                isConnectingRef.current = false;\n            };\n        } catch (error) {\n            if (!mountedRef.current) return;\n            setConnectionError(\"Failed to establish WebSocket connection. Please check your network connection.\");\n            isConnectingRef.current = false;\n        }\n    }, [\n        reconnectAttempts,\n        handleBinaryMessage\n    ]);\n    const updateEjectionSettings = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((newSettings)=>{\n        var _wsRef_current;\n        console.log(\"Updating ejection settings via websocket\");\n        if (((_wsRef_current = wsRef.current) === null || _wsRef_current === void 0 ? void 0 : _wsRef_current.readyState) === WebSocket.OPEN) {\n            wsRef.current.send(JSON.stringify({\n                type: \"updateEjectionSettings\",\n                data: newSettings\n            }));\n            setState((prev)=>({\n                    ...prev,\n                    ejectionSettings: newSettings,\n                    lastUpdate: new Date()\n                }));\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.success(\"Ejection settings updated\");\n        } else {\n            sonner__WEBPACK_IMPORTED_MODULE_1__.toast.error(\"Cannot update settings: WebSocket not connected\");\n        }\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        mountedRef.current = true;\n        connect();\n        return ()=>{\n            mountedRef.current = false;\n            isConnectingRef.current = false;\n            // Clean up image URLs\n            setState((prev)=>{\n                if (prev.currentImageUrl) {\n                    URL.revokeObjectURL(prev.currentImageUrl);\n                }\n                return prev;\n            });\n            if (wsRef.current) {\n                wsRef.current.close(1000, \"Component unmounting\");\n                wsRef.current = null;\n            }\n            if (reconnectTimeoutRef.current) {\n                clearTimeout(reconnectTimeoutRef.current);\n                reconnectTimeoutRef.current = null;\n            }\n        };\n    }, [\n        connect\n    ]);\n    return {\n        status: state,\n        logs,\n        alerts,\n        connectionStatus,\n        connectionError,\n        reconnectAttempts,\n        updateEjectionSettings\n    };\n};\n_s(useWebSocketManager, \"qPK1cRBDDinl3GdWC81hluHVEUM=\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useWebsocket.tsx\n"));

/***/ })

});